# dagster/base/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster
  labels:
    app: dagster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dagster
  template:
    metadata:
      labels:
        app: dagster
    spec:
      serviceAccountName: dagster  # Correctly placed at the pod spec level
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
      - name: fix-permissions
        image: busybox:1.36
        command: ['sh', '-c', 'chown -R 1000:1000 /opt/dagster/dagster_home /opt/dagster/dagster_workspace']
        volumeMounts:
        - name: dagster-home
          mountPath: /opt/dagster/dagster_home
        - name: dagster-workspace
          mountPath: /opt/dagster/dagster_workspace
        securityContext:
          runAsUser: 0
      - name: git-sync-init
        image: registry.k8s.io/git-sync/git-sync:v4.2.1
        env:
        - name: GITSYNC_REPO
          value: "https://github.com/x81k25/dagstributor"
        - name: GITSYNC_REF
          value: "main"  # Will be overridden per environment
        - name: GITSYNC_ROOT
          value: "/git-repo"
        - name: GITSYNC_LINK
          value: "dagstributor"
        - name: GITSYNC_ONE_TIME
          value: "true"
        - name: GITSYNC_VERBOSE
          value: "1"
        volumeMounts:
        - name: git-repo
          mountPath: /git-repo
      containers:
      - name: dagster-dagit
        image: ghcr.io/x81k25/dagstributor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: dagit-http
        envFrom:
        - configMapRef:
            name: environment
        - configMapRef:
            name: wst-config
        - secretRef:
            name: wst-secrets
        - configMapRef:
            name: dagster-config
        - secretRef:
            name: dagster-secrets
        - configMapRef:
            name: rear-diff-config
        - secretRef:
            name: rear-diff-secrets
        - configMapRef:
            name: reel-driver-config
        - configMapRef:
            name: at-config
        - secretRef:
            name: at-secrets
        - configMapRef:
            name: transmission-config
        - secretRef:
            name: transmission-secrets
        env:
        - name: DAGSTER_HOME
          value: "/opt/dagster/dagster_home"
        # Additional Dagster config
        - name: DAGIT_PORT
          value: "3000"
        - name: DAGSTER_K8S_PIPELINE_RUN_NAMESPACE
          value: "media-dev"
        - name: DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP
          value: "dagster-pipeline-env"
        command:
        - bash
        - -c
        - |
          mkdir -p $DAGSTER_HOME
          cat > $DAGSTER_HOME/dagster.yaml << EOL
          run_storage:
            module: dagster_postgres.run_storage
            class: PostgresRunStorage
            config:
              postgres_db:
                username: ${DAGSTER_PG_USERNAME}
                password: ${DAGSTER_PG_PASSWORD}
                hostname: ${DAGSTER_PG_HOST}
                port: ${DAGSTER_PG_PORT}
                db_name: ${DAGSTER_PG_DB}
                
          schedule_storage:
            module: dagster_postgres.schedule_storage
            class: PostgresScheduleStorage
            config:
              postgres_db:
                username: ${DAGSTER_PG_USERNAME}
                password: ${DAGSTER_PG_PASSWORD}
                hostname: ${DAGSTER_PG_HOST}
                port: ${DAGSTER_PG_PORT}
                db_name: ${DAGSTER_PG_DB}
                
          event_log_storage:
            module: dagster_postgres.event_log
            class: PostgresEventLogStorage
            config:
              postgres_db:
                username: ${DAGSTER_PG_USERNAME}
                password: ${DAGSTER_PG_PASSWORD}
                hostname: ${DAGSTER_PG_HOST}
                port: ${DAGSTER_PG_PORT}
                db_name: ${DAGSTER_PG_DB}
                
          run_coordinator:
            module: dagster.core.run_coordinator
            class: DefaultRunCoordinator
              
          run_launcher:
            module: dagster.core.launcher
            class: DefaultRunLauncher
          EOL
          
          cat > $DAGSTER_HOME/workspace.yaml << EOL
          load_from:
            - python_module:
                module_name: "dagstributor.definitions"
                working_directory: "/opt/dagster/app/dagstributor"
          EOL
          
          dagster-webserver -h 0.0.0.0 -p 3000 -w $DAGSTER_HOME/workspace.yaml
        volumeMounts:
        - name: git-repo
          mountPath: /opt/dagster/app
          readOnly: true
        - name: dagster-home
          mountPath: /opt/dagster/dagster_home
        - name: dagster-workspace
          mountPath: /opt/dagster/dagster_workspace
      - name: dagster-daemon
        image: ghcr.io/x81k25/dagstributor:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: environment
        - configMapRef:
            name: wst-config
        - secretRef:
            name: wst-secrets
        - configMapRef:
            name: dagster-config
        - secretRef:
            name: dagster-secrets
        - configMapRef:
            name: rear-diff-config
        - secretRef:
            name: rear-diff-secrets
        - configMapRef:
            name: reel-driver-config
        - configMapRef:
            name: at-config
        - secretRef:
            name: at-secrets
        - configMapRef:
            name: transmission-config
        - secretRef:
            name: transmission-secrets
        env:
        - name: DAGSTER_HOME
          value: "/opt/dagster/dagster_home"
        - name: DAGSTER_K8S_PIPELINE_RUN_NAMESPACE
          value: "orchestration"
        - name: DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP
          value: "dagster-pipeline-env"
        command:
        - bash
        - -c
        - |
          # Wait until the shared config file is created by dagit
          until [ -f $DAGSTER_HOME/dagster.yaml ]; do
            echo "Waiting for dagster.yaml to be created..."
            sleep 5
          done
          dagster-daemon run -w $DAGSTER_HOME/workspace.yaml
        volumeMounts:
        - name: git-repo
          mountPath: /opt/dagster/app
          readOnly: true
        - name: dagster-home
          mountPath: /opt/dagster/dagster_home
        - name: dagster-workspace
          mountPath: /opt/dagster/dagster_workspace
      - name: git-sync
        image: registry.k8s.io/git-sync/git-sync:v4.2.1
        env:
        - name: GITSYNC_REPO
          value: "https://github.com/x81k25/dagstributor"
        - name: GITSYNC_REF
          value: "main"  # Will be overridden per environment
        - name: GITSYNC_ROOT
          value: "/git-repo"
        - name: GITSYNC_LINK
          value: "dagstributor"
        - name: GITSYNC_PERIOD
          value: "3600s"
        - name: GITSYNC_ONE_TIME
          value: "false"
        - name: GITSYNC_VERBOSE
          value: "1"
        volumeMounts:
        - name: git-repo
          mountPath: /git-repo
      volumes:
      - name: git-repo
        emptyDir:
          sizeLimit: 100Mi
      - name: dagster-home
        hostPath:
          path: /d/k8s/volumes/dagster/ENV/home
          type: DirectoryOrCreate
      - name: dagster-workspace
        hostPath:
          path: /d/k8s/volumes/dagster/ENV/workspace
          type: DirectoryOrCreate